#version 400
layout(quads, equal_spacing, ccw) in;

uniform sampler2D heightMap;
uniform float gridSize;
uniform int heightScale;

vec4 tessPosition;

void main() {
	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	tessPosition = (1 - u) * (1 - v) * gl_in[0].gl_Position
		 +      u  * (1 - v) * gl_in[1].gl_Position
		 +      u  *      v  * gl_in[2].gl_Position
		 + (1 - u) *      v  * gl_in[3].gl_Position;//quad domain

	float x = tessPosition.x / gridSize; 
	float z = tessPosition.z / gridSize; //normalize (0,0) to (1,1)
	
  float heightValue = texture(heightMap, vec2(x, z)).r;//range 0 to 1
  float heightY=heightValue * heightScale;
  if(heightY<=2.5)
  	  		heightY=2.5;
  		tessPosition.y = heightY;
	gl_Position = tessPosition;//get vertexes' y value(height value) and set them to vertexies

}
