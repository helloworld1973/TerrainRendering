#version 400

layout(vertices = 4) out;

uniform int defaultTessLevel;
uniform int maxTessLevel;
//uniform int slopeDistance;
uniform int heightLoc;
uniform float gridSizeMax;
uniform sampler2D heightMap;
uniform vec4 cameraVector;


void main()
{
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;//pass through patches  gl_InvocationID=0,1,2,3
	
	float tessLevel = defaultTessLevel;

	float distance = abs(distance(gl_in[gl_InvocationID].gl_Position, cameraVector));//the distance between point A and B

	float distanceMin= 20-heightLoc;//20-12=8
	float distanceMax=sqrt(2*(gridSizeMax)*(gridSizeMax)+cameraVector[1]*cameraVector[1]); ; 
	
	tessLevel = ((distance - distanceMin) / (distanceMax-distanceMin)) * (defaultTessLevel - maxTessLevel) + maxTessLevel;
	//tessLevel =((distance - 0) * 1.5 / ((2 * gridSizeMax / 3) - 0)) * (defaultTessLevel - maxTessLevel) + maxTessLevel;

	gl_TessLevelOuter[0] = tessLevel;
	gl_TessLevelOuter[1] = tessLevel;
	gl_TessLevelOuter[2] = tessLevel;
	gl_TessLevelOuter[3] = tessLevel;
	gl_TessLevelInner[0] = tessLevel;
	gl_TessLevelInner[1] = tessLevel;
}

